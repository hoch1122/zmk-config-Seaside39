#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        aa {
            bindings = <&bt BT_CLR>;
            key-positions = <30 38>;
            layers = <4>;
        };

        ss {
            bindings = <&bootloader>;
            key-positions = <9 19 38>;
        };

        sr {
            bindings = <&bootloader>;
            key-positions = <0 10 30>;
        };

        winlock {
            bindings = <&kp LG(L)>;
            key-positions = <32 18>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_press>;

            label = "TO_LAYER_0";
        };

        kaiten: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp MCLK>,
                <&macro_wait_time 200>,
                <&mkp RCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK &mkp RCLK>;

            label = "NEW_MACRO";
        };

        zoom: zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp MCLK>,
                <&macro_wait_time 100>,
                <&mkp RCLK>,
                <&macro_release>,
                <&mkp RCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK>;

            label = "ZOOM";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        holdmkp: holdmkp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDMKP";
            bindings = <&mkp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q               &kp W     &kp E                &kp R             &kp T                                                         &kp Y          &kp U      &lt 5 I          &kp O       &kp P
&mt LEFT_SHIFT A    &kp S     &kp D                &lt 4 F           &mt LEFT_CONTROL G                                            &kp H          &mkp LCLK  &holdmkp MCLK K  &mkp RCLK   &lt 5 ENTER
&kp Z               &kp X     &kp C                &kp V             &kp B                                                         &kp N          &kp M      &kp COMMA        &kp PERIOD  &kp MINUS
&kp LG(LEFT_ARROW)  &kp LALT  &mt LEFT_WIN ESCAPE  &lt 1 LANGUAGE_2  &lt 2 INT2          &lt 3 F10      &mt INTERNATIONAL_4 SPACE  &kp BACKSPACE                                          &lt_to_layer_0 2 RG(RIGHT)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp QUESTION      &trans         &kp INTERNATIONAL_3  &trans  &trans                               &kp PERCENT    &kp LS(INTERNATIONAL_1)  &trans         &trans  &kp EQUAL
&kp LEFT_BRACKET  &kp LG(LS(S))  &kp DOLLAR           &trans  &trans                               &kp PAGE_UP    &kp J                    &kp LS(EQUAL)  &kp L   &trans
&trans            &trans         &trans               &trans  &kp EXCLAMATION                      &kp PAGE_DOWN  &trans                   &trans         &trans  &trans
&trans            &trans         &trans               &trans  &trans           &trans      &trans  &kp DELETE                                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp TAB         &trans          &kp UP_ARROW  &kp LC(C)  &kp LC(V)                                &kp SLASH     &kp N7        &kp NUMBER_8  &kp N9        &kp LS(APOS)
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp LEFT_CONTROL                         &kp MINUS     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS
&kp LC(Z)       &kp LC(X)       &kp LC(C)     &kp LC(V)  &kp DELETE                               &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp APOS
&trans          &trans          &trans        &trans     &trans            &trans      &kp UNDER  &kp NUMBER_0                                            &kp KP_NUM
            >;
        };

        MOUSE {
            bindings = <
&kp LS(F3)     &trans              &kp LS(UP_ARROW)  &trans         &trans                                 &trans         &trans   &trans    &trans  &trans
&kp LS(LC(B))  &kp LS(LEFT_ARROW)  &kp LS(DOWN)      &kp LS(RIGHT)  &kp LC(PG_UP)                          &kp PAGE_UP    &kaiten  &mkp MB3  &zoom   &trans
&trans         &trans              &trans            &trans         &kp LC(PAGE_DOWN)                      &kp PAGE_DOWN  &trans   &trans    &trans  &trans
&kp LC(B)      &trans              &trans            &trans         &trans             &trans      &trans  &trans                                    &kp LC(LS(B))
            >;
        };

        FUNCTION {
            bindings = <
&bt BT_SEL 0        &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans         &kp F7  &kp F8  &kp F9  &kp LG(TAB)
&kp LC(LG(LEFT))    &trans        &trans        &trans        &trans                            &bt BT_PRV     &kp F4  &kp F5  &kp F6  &kp LC(LG(RIGHT))
&kp LA(LEFT_ARROW)  &trans        &trans        &trans        &trans                            &bt BT_NXT     &kp F1  &kp F2  &kp F3  &kp RA(RIGHT)
&kp LC(Z)           &trans        &trans        &trans        &trans        &trans      &trans  &kp BACKSPACE                          &kp LC(Y)
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SNIPE {
            bindings = <
&trans          &trans  &trans  &trans  &trans                                 &trans  &trans     &trans     &trans     &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &kp RIGHT_CONTROL                      &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans          &trans  &trans  &trans  &trans                                 &trans  &trans     &trans     &trans     &trans
&trans          &trans  &trans  &trans  &trans             &trans      &trans  &trans                                   &trans
            >;
        };
    };
};
